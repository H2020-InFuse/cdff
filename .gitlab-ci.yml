 variables:
   REGISTRY_PREFIX: nexus.spaceapplications.com/
   FORCE: ""
   NOCACHE: ""


 stages:
  - docker.base
  - docker.open
  - docker.closed
  - docker.external
  - generation
  - configure
  - build
  - analyse
  - report
  - test
  - deploy

 .after_script: &prune
  - docker system prune --all --force --volumes

 .docker:connect: &connect
  before_script:
   - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD $REGISTRY_PREFIX

 docker:cdff-base:
  <<: *connect
  services:
   - docker:dind
  image: nexus.spaceapplications.com/repository/infuse/docker-builder
  stage: docker.base
  script:
   - cd Tools/Docker/
   - ./docker-builder.sh Dockerfile.base cdff-base SHA=$CI_COMMIT_SHA $FORCE $NOCACHE
  only:
   changes:
    - Tools/Docker/Dockerfile.base

 docker:cdff-open:
  <<: *connect
  services:
   - docker:dind
  image: nexus.spaceapplications.com/repository/infuse/docker-builder
  stage: docker.open
  script:
   - cd Tools/Docker/
   - ./docker-builder.sh Dockerfile.open cdff-open SHA=$CI_COMMIT_SHA $FORCE $NOCACHE
  only:
   changes:
    - Tools/Docker/Dockerfile.open

 docker:cdff-closed:
  <<: *connect
  services:
   - docker:dind
  image: nexus.spaceapplications.com/repository/infuse/docker-builder
  stage: docker.closed
  script:
   - cd Tools/Docker/
   - ./docker-builder.sh Dockerfile.closed cdff-closed USER=$DOCKER_USER PASS=$DOCKER_PASSWORD SHA=$CI_COMMIT_SHA $FORCE $NOCACHE MAGUSER=$EDRES_USER MAGPASS=$EDRES_PASSWORD
  only:
   changes:
    - Tools/Docker/Dockerfile.closed

 docker:cdff-dev-ci:
  <<: *connect
  services:
   - docker:dind
  image: nexus.spaceapplications.com/repository/infuse/docker-builder
  stage: docker.external
  allow_failure: true
  script:
   - cd Tools/Docker/
   - ./docker-builder.sh Dockerfile.dev-ci cdff-dev-ci SHA=$CI_COMMIT_SHA $FORCE $NOCACHE
  only:
   changes:
    - Tools/Docker/Dockerfile.dev-ci

 docker:cdff-user:
  <<: *connect
  services:
   - docker:dind
  image: nexus.spaceapplications.com/repository/infuse/docker-builder
  stage: docker.external
  allow_failure: true
  script:
   - cd Tools/Docker/
   - ./docker-builder.sh Dockerfile.user cdff-user USER=$DOCKER_USER PASS=$DOCKER_PASSWORD SHA=$CI_COMMIT_SHA $FORCE $NOCACHE
  only:
   changes:
    - Tools/Docker/Dockerfile.user

 generate:asn:
  image: nexus.spaceapplications.com/repository/infuse/cdff-base:latest
  stage : generation
  script:
    - Tools/ASN.1/GeneratorScript.sh
  artifacts:
   paths:
    - Common/Types/C/
   expire_in: 4 weeks

 .configure:release: &configure_release
  before_script:
   - echo "Docker Image (version:) " $IMAGE_VERSION ", (sha:)" $IMAGE_SHA
   - "mkdir -p build && cd build"
   - "cmake -DBUILD_CENTRALDPM=ON -DCMAKE_INSTALL_PREFIX=./ -DCMAKE_EXPORT_COMPILE_COMMANDS=ON .."
   - "CPUS=$(grep --count --regexp=^processor /proc/cpuinfo)"
   - "JOBS=$((CPUS/2))"
   - "JOBS=$((JOBS > 0 ? JOBS : 1))"
   - "cd .."

 .configure:debug: &configure_debug
  before_script:
   - echo "Docker Image (version:) " $IMAGE_VERSION ", (sha:)" $IMAGE_SHA
   - "mkdir -p build && cd build"
   - "cmake -DCMAKE_INSTALL_PREFIX=./ -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE:STRING=Debug -DCMAKE_C_FLAGS_DEBUG:STRING=-ggdb3 -DCMAKE_CXX_FLAGS_DEBUG:STRING=-ggdb3 .."
   - "CPUS=$(grep --count --regexp=^processor /proc/cpuinfo)"
   - "JOBS=$((CPUS/2))"
   - "JOBS=$((JOBS > 0 ? JOBS : 1))"
   - "cd .."

 .build:make: &make
  script:
   - echo "Docker Image (version:) " $IMAGE_VERSION ", (sha:)" $IMAGE_SHA
   - "cd build"
   - "JOBS=$((CPUS/2))"
   - "JOBS=$((JOBS > 0 ? JOBS : 1))"
   - "make --jobs=${JOBS} --output-sync=target"
   - "cd .."

 configure:cdff-base:
  <<: *configure_release
  image: nexus.spaceapplications.com/repository/infuse/cdff-base:latest
  stage: configure
  dependencies:
   - generate:asn
  script: echo ok
  artifacts:
   paths:
    - build/
   expire_in: 4 weeks

 configure:cdff-open:
  <<: *configure_release
  image: nexus.spaceapplications.com/repository/infuse/cdff-open:latest
  stage: configure
  script: echo ok
  dependencies:
   - generate:asn
  artifacts:
   paths:
    - build/
   expire_in: 4 weeks

 configure:cdff-closed:
  <<: *configure_release
  image: nexus.spaceapplications.com/repository/infuse/cdff-closed:latest
  stage: configure
  script: echo ok
  dependencies:
   - generate:asn
  artifacts:
   paths:
    - build/
   expire_in: 4 weeks

 configure:cdff-closed:debug:
  <<: *configure_debug
  image: nexus.spaceapplications.com/repository/infuse/cdff-closed:latest
  stage: configure
  script: echo ok
  dependencies:
   - generate:asn
  only:
   - merge_requests
   - master
  artifacts:
   paths:
    - build/
   expire_in: 4 weeks

 build:cdff-base:
  <<: *make
  image: nexus.spaceapplications.com/repository/infuse/cdff-base:latest
  stage: build
  dependencies:
   - generate:asn
   - configure:cdff-base
  artifacts:
   paths:
    - build/
   expire_in: 4 weeks

 build:cdff-open:
  <<: *make
  image: nexus.spaceapplications.com/repository/infuse/cdff-open:latest
  stage: build
  dependencies:
   - generate:asn
   - configure:cdff-open
  artifacts:
   paths:
    - build/
   expire_in: 4 weeks

 build:cdff-closed:
  <<: *make
  image: nexus.spaceapplications.com/repository/infuse/cdff-closed:latest
  stage: build
  dependencies:
   - generate:asn
   - configure:cdff-closed
  artifacts:
   paths:
    - build/
   expire_in: 4 weeks

 build:cdff-closed:debug:
  <<: *make
  image: nexus.spaceapplications.com/repository/infuse/cdff-closed:latest
  stage: build
  dependencies:
   - generate:asn
   - configure:cdff-closed:debug
  only:
   - merge_requests
   - master
  artifacts:
   paths:
    - build/Tests/UnitTests
   expire_in: 4 weeks

 build:user:system:
  <<: *configure_release
  <<: *make
  image: nexus.spaceapplications.com/repository/infuse/cdff-user:latest
  stage: build
  allow_failure: true
  dependencies:
   - generate:asn
  when: manual

 build:dev-ci:system:
  <<: *configure_release
  <<: *make
  image: nexus.spaceapplications.com/repository/infuse/cdff-dev-ci:latest
  stage: build
  allow_failure: true
  dependencies:
   - generate:asn
  when: manual

 analyse:memcheck:
  stage: analyse
  image: nexus.spaceapplications.com/repository/infuse/cdff-valgrind:latest
  dependencies:
    - build:cdff-closed:debug
  script:
    - Tools/Valgrind/valgrind.sh
  allow_failure: true
  only:
    - merge_requests
    - master
  artifacts:
    when: always
    paths:
     - Tools/Valgrind/report
    expire_in: 4 weeks

 analyse:cppcheck:
  stage: analyse
  image: nexus.spaceapplications.com/repository/infuse/docker-cppcheck:1.85
  dependencies:
    - configure:cdff-closed:debug
  script:
    - Tools/CPPCheck/full-cppcheck.sh build/compile_commands.json
  allow_failure: true
  only:
    - merge_requests
    - master
  artifacts:
   when: always
   paths:
    - Tools/CPPCheck/report
   expire_in: 4 weeks

 .analyse:cppcheck:partial:
  stage: analyse
  image: nexus.spaceapplications.com/repository/infuse/docker-cppcheck:1.85
  except:
   - master
  script:
   - Tools/CPPCheck/partial-cppcheck.sh

 report:memcheck:
  <<: *connect
  stage: report
  image : nexus.spaceapplications.com/repository/infuse/docker-builder
  services:
   - docker:dind
  variables:
   MOUNT_POINT: /builds/$CI_PROJECT_PATH
  dependencies:
   - analyse:memcheck
  script:
   - docker run -d -v "$MOUNT_POINT:$MOUNT_POINT" --name=report-memcheck --rm nexus.spaceapplications.com/repository/infuse/cdff-jenkins:latest
   - docker exec report-memcheck /$MOUNT_POINT/Tools/Valgrind/generate-report.sh
   - docker stop report-memcheck
  allow_failure: true
  artifacts:
   when: always
   paths:
    - Tools/Valgrind/report

 report:cppcheck:
  image: nexus.spaceapplications.com/repository/infuse/docker-cppcheck:1.85
  stage: report
  dependencies:
   - analyse:cppcheck
  script:
   - Tools/CPPCheck/generate-report.sh
  allow_failure: true
  only:
   - merge_requests
   - master
  artifacts:
   when: always
   paths:
    - Tools/CPPCheck/report

 pages:
  stage: deploy
  when: always
  only:
    - merge_requests
    - master
  dependencies:
   - report:memcheck
   - report:cppcheck
  script:
   - mkdir -p .public/cppcheck && mkdir -p .public/memcheck
   - cp -r Tools/CPPCheck/report/* .public/cppcheck
   - cp -r Tools/Valgrind/report/* .public/memcheck
   - mv .public public
  artifacts:
   paths:
    - public

 test:base:
  image: nexus.spaceapplications.com/repository/infuse/cdff-base:latest
  stage: test
  dependencies:
   - build:cdff-base
  script:
   - cd build/Tests/UnitTests
   - LD_LIBRARY_PATH=../../Support/CentralDPM/EnvireASN1 ./cdff-unit-tests

 test:full:
  image: nexus.spaceapplications.com/repository/infuse/cdff-closed:latest
  stage: test
  dependencies:
   - build:cdff-closed
  script:
   - cd build/Tests/UnitTests
   - LD_LIBRARY_PATH=../../Support/CentralDPM/EnvireASN1 ./cdff-unit-tests

 test:dependencies:local:
  image: ubuntu:latest
  stage: deploy
  script:
   - External/get-cdff-dependencies.sh -e
   - mkdir -p build && cd build
   - cmake -D USE_BUNDLED_DEPENDENCIES=ON -D BUILD_CENTRALDPM=ON ..
   - make
   - make install
  only:
   - manual

 test:dependencies:system:
   image: ubuntu:latest
   stage: deploy
   script:
    - External/get-cdff-dependencies.sh -e -i /usr/local
    - mkdir -p build && cd build
    - cmake -D BUILD_CENTRALDPM=ON ..
    - make
    - make install
   only:
    - manual

 deploy:development:
  image: ubuntu:latest
  stage: deploy
  script:
   - echo "Deploy as development"
  only:
   - master

 deploy:release:
  image: ubuntu:latest
  stage: deploy
  script:
   - echo "Deploy as release"
  only:
   - master

 deploy:flight:
  image: ubuntu:latest
  stage: deploy
  script:
   - echo "Deploy as flight"
  only:
   - master
