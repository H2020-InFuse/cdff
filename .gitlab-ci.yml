 variables:
   REGISTRY_PREFIX: nexus.spaceapplications.com/
   FORCE: ""
   NOCACHE: ""


 stages:
  - docker.base
  - docker.ci
  - docker.external
  - generation
  - analyse
  - build
  - debug-build
  - report
  - test
  - deploy

 .docker:connect: &connect
  before_script:
   - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD $REGISTRY_PREFIX

 docker:cdff-base:
  <<: *connect
  services:
   - docker:dind
  image: nexus.spaceapplications.com/repository/infuse/docker-builder
  stage: docker.base
  script:
   - cd Tools/Docker/
   - ./docker-builder.sh Dockerfile.base cdff-base SHA=$CI_COMMIT_SHA $FORCE $NOCACHE
  only:
   changes:
    - Tools/Docker/Dockerfile.base

 docker:cdff-ci:
  <<: *connect
  services:
   - docker:dind
  image: nexus.spaceapplications.com/repository/infuse/docker-builder
  stage: docker.ci
  script:
   - cd Tools/Docker/
   - ./docker-builder.sh Dockerfile.ci cdff-ci USER=$DOCKER_USER PASS=$DOCKER_PASSWORD SHA=$CI_COMMIT_SHA $FORCE $NOCACHE MAGUSER=$EDRES_USER MAGPASS=$EDRES_PASSWORD
  only:
   changes:
    - Tools/Docker/Dockerfile.ci

 docker:cdff-visp:
  <<: *connect
  services:
   - docker:dind
  image: nexus.spaceapplications.com/repository/infuse/docker-builder
  stage: docker.ci
  script:
   - cd Tools/Docker/
   - ./docker-builder.sh Dockerfile.visp cdff-visp SHA=$CI_COMMIT_SHA $FORCE $NOCACHE
  only:
   changes:
    - Tools/Docker/Dockerfile.visp

 docker:cdff-gdalwrap:
  <<: *connect
  services:
   - docker:dind
  image: nexus.spaceapplications.com/repository/infuse/docker-builder
  stage: docker.ci
  script:
   - cd Tools/Docker/
   - ./docker-builder.sh Dockerfile.gdalwrap cdff-gdalwrap SHA=$CI_COMMIT_SHA $FORCE $NOCACHE
  only:
   changes:
    - Tools/Docker/Dockerfile.gdalwrap

 docker:cdff-pangolin:
  <<: *connect
  services:
   - docker:dind
  image: nexus.spaceapplications.com/repository/infuse/docker-builder
  stage: docker.ci
  script:
   - cd Tools/Docker/
   - ./docker-builder.sh Dockerfile.pangolin cdff-pangolin SHA=$CI_COMMIT_SHA $FORCE $NOCACHE
  only:
   changes:
    - Tools/Docker/Dockerfile.pangolin

 docker:cdff-edres:
  <<: *connect
  services:
   - docker:dind
  image: nexus.spaceapplications.com/repository/infuse/docker-builder
  stage: docker.ci
  script:
   - cd Tools/Docker/
   - ./docker-builder.sh Dockerfile.edres cdff-edres SHA=$CI_COMMIT_SHA $FORCE $NOCACHE MAGUSER=$EDRES_USER MAGPASS=$EDRES_PASSWORD
  only:
   changes:
    - Tools/Docker/Dockerfile.edres

 docker:cdff-opencv-contrib:
  <<: *connect
  services:
   - docker:dind
  image: nexus.spaceapplications.com/repository/infuse/docker-builder
  stage: docker.ci
  script:
   - cd Tools/Docker/
   - ./docker-builder.sh Dockerfile.opencv-contrib cdff-opencv-contrib SHA=$CI_COMMIT_SHA $FORCE $NOCACHE
  only:
   changes:
    - Tools/Docker/Dockerfile.opencv-contrib

 docker:cdff-dlrtracker:
  <<: *connect
  services:
   - docker:dind
  image: nexus.spaceapplications.com/repository/infuse/docker-builder
  stage: docker.ci
  script:
   - cd Tools/Docker/
   - ./docker-builder.sh Dockerfile.dlrtracker cdff-dlrtracker USER=$DOCKER_USER PASS=$DOCKER_PASSWORD SHA=$CI_COMMIT_SHA $FORCE $NOCACHE
  only:
   changes:
    - Tools/Docker/Dockerfile.dlrtracker

 docker:cdff-envire:
  <<: *connect
  services:
   - docker:dind
  image: nexus.spaceapplications.com/repository/infuse/docker-builder
  stage: docker.ci
  script:
   - cd Tools/Docker/
   - ./docker-builder.sh Dockerfile.envire cdff-envire USER=$DOCKER_USER PASS=$DOCKER_PASSWORD SHA=$CI_COMMIT_SHA $FORCE $NOCACHE
  only:
   changes:
    - Tools/Docker/Dockerfile.envire

 docker:cdff-dev-ci:
  <<: *connect
  services:
   - docker:dind
  image: nexus.spaceapplications.com/repository/infuse/docker-builder
  stage: docker.external
  script:
   - cd Tools/Docker/
   - ./docker-builder.sh Dockerfile.dev-ci cdff-dev-ci USER=$DOCKER_USER PASS=$DOCKER_PASSWORD SHA=$CI_COMMIT_SHA $FORCE $NOCACHE
  only:
   changes:
    - Tools/Docker/Dockerfile.dev-ci

 docker:cdff-user:
  <<: *connect
  services:
   - docker:dind
  image: nexus.spaceapplications.com/repository/infuse/docker-builder
  stage: docker.external
  script:
   - cd Tools/Docker/
   - ./docker-builder.sh Dockerfile.user cdff-user USER=$DOCKER_USER PASS=$DOCKER_PASSWORD SHA=$CI_COMMIT_SHA $FORCE $NOCACHE
  only:
   changes:
    - Tools/Docker/Dockerfile.user

 docker:cdff-valgrind:
  <<: *connect
  services:
   - docker:dind
  image: nexus.spaceapplications.com/repository/infuse/docker-builder
  stage: docker.external
  script:
   - cd Tools/Docker/
   - ./docker-builder.sh Dockerfile.valgrind cdff-valgrind USER=$DOCKER_USER PASS=$DOCKER_PASSWORD SHA=$CI_COMMIT_SHA $FORCE $NOCACHE
  only:
   changes:
    - Tools/Docker/Dockerfile.valgrind

 docker:cdff-jenkins:
  <<: *connect
  services:
   - docker:dind
  image: nexus.spaceapplications.com/repository/infuse/docker-builder
  stage: docker.external
  script:
   - cd Tools/Docker/
   - ./docker-builder.sh Dockerfile.jenkins cdff-jenkins USER=$DOCKER_USER PASS=$DOCKER_PASSWORD SHA=$CI_COMMIT_SHA $FORCE $NOCACHE
  only:
   changes:
    - Tools/Docker/Dockerfile.jenkins

 generate:asn:
  image: nexus.spaceapplications.com/repository/infuse/cdff-ci:latest
  stage : generation
  script:
    - Tools/ASN.1/GeneratorScript.sh
  artifacts:
   paths:
    - Common/Types/C/
   expire_in: 4 weeks

 .build:configure: &configure
  before_script:
   - echo "Docker Image (version:) " $IMAGE_VERSION ", (sha:)" $IMAGE_SHA
   - "mkdir -p build && cd build"
   - "cmake -DBUILD_CENTRALDPM=ON -DCMAKE_INSTALL_PREFIX=./ -DCMAKE_EXPORT_COMPILE_COMMANDS=ON .."
   - "CPUS=$(grep --count --regexp=^processor /proc/cpuinfo)"
   - "JOBS=$((CPUS/2))"
   - "JOBS=$((JOBS > 0 ? JOBS : 1))"
   - "cd .."

 .build:make: &make
  script:
   - "cd build"
   - "make --jobs=${JOBS} --output-sync=target"
   - "cd .."

 build:cdff-base:system:
  <<: *configure
  <<: *make
  image: nexus.spaceapplications.com/repository/infuse/cdff-base:latest
  stage: build
  dependencies:
   - generate:asn
  artifacts:
   paths:
    - build/
   expire_in: 4 weeks

 build:cdff-ci:system:
  <<: *configure
  <<: *make
  image: nexus.spaceapplications.com/repository/infuse/cdff-ci:latest
  stage: build
  dependencies:
   - generate:asn
  artifacts:
   paths:
    - build/
   expire_in: 4 weeks

 build:cdff-pangolin:system:
  <<: *configure
  <<: *make
  image: nexus.spaceapplications.com/repository/infuse/cdff-pangolin:latest
  stage: debug-build
  dependencies:
   - generate:asn
  when: manual

 build:cdff-gdalwrap:system:
  <<: *configure
  <<: *make
  image: nexus.spaceapplications.com/repository/infuse/cdff-gdalwrap:latest
  stage: debug-build
  dependencies:
   - generate:asn
  when: manual

 build:cdff-edres:system:
  <<: *configure
  <<: *make
  image: nexus.spaceapplications.com/repository/infuse/cdff-edres:latest
  stage: debug-build
  dependencies:
   - generate:asn
  when: manual

 build:cdff-envire:system:
  <<: *configure
  <<: *make
  image: nexus.spaceapplications.com/repository/infuse/cdff-envire:latest
  stage: debug-build
  dependencies:
   - generate:asn
  when: manual

 build:cdff-opencv-contrib:system:
  <<: *configure
  <<: *make
  image: nexus.spaceapplications.com/repository/infuse/cdff-opencv-contrib:latest
  stage: debug-build
  dependencies:
   - generate:asn
  when: manual

 build:cdff-dlrtracker:system:
  <<: *configure
  <<: *make
  image: nexus.spaceapplications.com/repository/infuse/cdff-dlrtracker:latest
  stage: debug-build
  dependencies:
   - generate:asn
  when: manual

 build:cdff-visp:system:
  <<: *configure
  <<: *make
  image: nexus.spaceapplications.com/repository/infuse/cdff-visp:latest
  stage: debug-build
  dependencies:
   - generate:asn
  when: manual

 build:user:system:
  <<: *configure
  <<: *make
  image: nexus.spaceapplications.com/repository/infuse/cdff-user:latest
  stage: build
  allow_failure: true
  dependencies:
   - generate:asn
  when: manual

 analyse:memcheck:full:
  stage: analyse
  image: nexus.spaceapplications.com/repository/infuse/cdff-valgrind:latest
  dependencies:
    - generate:asn
  script:
    - Tools/Valgrind/valgrind.sh --full
  only:
    - merge_requests
    - master
  allow_failure: true
  artifacts:
    when: always
    paths:
     - valgrind_debug/results
    expire_in: 4 weeks

 report:memcheck:
  image: nexus.spaceapplications.com/repository/infuse/cdff-jenkins:latest
  stage: report
  dependencies:
   - analyse:memcheck:full
  only:
   - merge_requests
   - master
  script:
   - mkdir -p jenkins/
   - Tools/Valgrind/generate-report.sh
  allow_failure: true
  artifacts:
   when: always
   paths:
    - jenkins/

 analyse:cppcheck:full:
  <<: *configure
  stage: analyse
  image: nexus.spaceapplications.com/repository/infuse/docker-cppcheck:1.85
  script:
    - Tools/CPPCheck/full-cppcheck.sh build/compile_commands.json
  only:
    - merge_requests
    - master
  allow_failure: true
  artifacts:
   when: always
   paths:
    - cppcheck/
   expire_in: 4 weeks

 analyse:cppcheck:partial:
  stage: analyse
  image: nexus.spaceapplications.com/repository/infuse/docker-cppcheck:1.85
  except:
   - master
  script:
   - Tools/CPPCheck/partial-cppcheck.sh

 pages:
  stage: deploy
  when: always
  dependencies:
   - report:memcheck
   - analyse:cppcheck:full
  script:
   - mkdir .public
   - cp -r cppcheck/public/* .public/cppcheck
   - cp -r jenkins/static_html/* .public/jenkins
   - mv .public public
  artifacts:
   paths:
    - public
  only:
   - merge_requests
   - master

 test:base:unit-tests:
  image: nexus.spaceapplications.com/repository/infuse/cdff-base:latest
  stage: test
  dependencies:
   - build:cdff-base:system
  script:
   - cd build/Tests/UnitTests
   - LD_LIBRARY_PATH=../../Support/CentralDPM/EnvireASN1 ./cdff-unit-tests

 test:full:unit-tests:
  image: nexus.spaceapplications.com/repository/infuse/cdff-ci:latest
  stage: test
  dependencies:
   - build:cdff-ci:system
  script:
   - cd build/Tests/UnitTests
   - LD_LIBRARY_PATH=../../Support/CentralDPM/EnvireASN1 ./cdff-unit-tests


 test:dependencies:local:
  image: ubuntu:latest
  stage: deploy
  script:
   - External/get-cdff-dependencies.sh -e
   - mkdir -p build && cd build
   - cmake -D USE_BUNDLED_DEPENDENCIES=ON -D BUILD_CENTRALDPM=ON ..
   - make
   - make install
  only:
   - manual

 test:dependencies:system:
   image: ubuntu:latest
   stage: deploy
   script:
    - External/get-cdff-dependencies.sh -e -i /usr/local
    - mkdir -p build && cd build
    - cmake -D BUILD_CENTRALDPM=ON ..
    - make
    - make install
   only:
    - manual

 deploy:development:
  image: ubuntu:latest
  stage: deploy
  script:
   - echo "Deploy as development"
  only:
   - master

 deploy:release:
  image: ubuntu:latest
  stage: deploy
  script:
   - echo "Deploy as release"
  only:
   - master

 deploy:flight:
  image: ubuntu:latest
  stage: deploy
  script:
   - echo "Deploy as flight"
  only:
   - master
