name: Transform3DEstimation
doc: DFN that estimates the geometric transformation between two sets of matched 3d points
input_ports:
    - name: matches
      type: asn1SccCorrespondenceMaps3DSequence
      doc: "keypoint matches between the 3d points in n cartesian systems O1, O2, ... On. 
	    Each correspondence map contains pairs of 3d points map(A-B) ={ ((x^A_1, y^A_1, z^A_1), 
	    (x^B_1, y^B_1, z^B_1)), ..., ((x^A_n, y^A_n, z^A_n), (x^B_n, y^B_n, z^B_n)) }. 
	    Each pair contains the coordinates of the same 3d points in
	    two coordinate systems. The correspondence maps appear in the following order,
	    map(O1-O2), map(01-03), ..., map(01-0n), map(O2-O3), ..., map(O2-On), ..., map(On-1, On)"
output_ports:
    - name: transforms
      type: asn1SccPosesSequence
      doc: "this is an estimation of the poses of O2 in O1, O3 in O1, ..., On in O, 
	    O2 in O3, O2 in O4, ..., O2 in On, ..., On-1 in On.
            A pose has null quaternion if it was impossible to compute, as computation
	    may fail if matches are not good enough."
    - name: success
      type: bool
      doc: "boolean flag indicating successful computation of the pose of O2 in O1, 
	   only when the input matches contain a single map, map(01-02). If the
	   matches contain multiple maps, this output is always true."
implementations:
    - LeastSquaresMinimization
