set(POINT_CLOUD_ASSEMBLY_SOURCES "PointCloudAssemblyInterface.cpp")
set(POINT_CLOUD_ASSEMBLY_INCLUDE_DIRS "")
set(POINT_CLOUD_ASSEMBLY_DEPENDENCIES "cdff_types" "yaml-cpp" "cdff_helpers" "cdff_converters")

if(PCL_FOUND)
	set(POINT_CLOUD_ASSEMBLY_SOURCES ${POINT_CLOUD_ASSEMBLY_SOURCES} "NeighbourPointAverage.cpp" "NeighbourSinglePointAverage.cpp" "VoxelBinning.cpp")
	set(POINT_CLOUD_ASSEMBLY_INCLUDE_DIRS ${POINT_CLOUD_ASSEMBLY_INCLUDE_DIRS} ${PCL_INCLUDE_DIRS})
	set(POINT_CLOUD_ASSEMBLY_DEPENDENCIES ${POINT_CLOUD_ASSEMBLY_DEPENDENCIES} ${PCL_COMMON_LIBRARIES} ${PCL_KDTREE_LIBRARIES} ${PCL_SEARCH_LIBRARIES})
endif()

if(POINTMATCHER_FOUND)
	set(POINT_CLOUD_ASSEMBLY_SOURCES ${POINT_CLOUD_ASSEMBLY_SOURCES} "MatcherAssembly.cpp")
	set(POINT_CLOUD_ASSEMBLY_INCLUDE_DIRS ${POINT_CLOUD_ASSEMBLY_INCLUDE_DIRS} ${POINTMATCHER_INCLUDE_DIRS})
	set(POINT_CLOUD_ASSEMBLY_DEPENDENCIES ${POINT_CLOUD_ASSEMBLY_DEPENDENCIES} ${POINTMATCHER_LIBRARIES})
endif()

add_library(
    cdff_dfn_point_cloud_assembly
    ${POINT_CLOUD_ASSEMBLY_SOURCES}
)
target_include_directories(
    cdff_dfn_point_cloud_assembly
    SYSTEM PRIVATE ${POINT_CLOUD_ASSEMBLY_INCLUDE_DIRS}
)
target_link_libraries(
    cdff_dfn_point_cloud_assembly
    ${POINT_CLOUD_ASSEMBLY_DEPENDENCIES}
)
