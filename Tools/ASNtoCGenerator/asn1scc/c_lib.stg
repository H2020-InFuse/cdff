/*
* Copyright (c) 2008-2012 Semantix and (c) 2012-2015 Neuropublic
*
* This file is part of the ASN1SCC tool.
*
* Licensed under the terms of GNU General Public Licence as published by
* the Free Software Foundation.
*
*  For more informations see License.txt file
*/

group c_lib;

PrintArrayPostfix(nLength) ::= "[<nLength>]"

String_get_count(p) ::= "(int)strlen(<p>)"

Sizeable_get_count(p) ::= "<p>nCount"

SetCount(p, v, bFixedSize) ::= <<
<if(!bFixedSize)>
<p>nCount = <v>;

<endif>
>>

PrintLocalVariable(sTypeDecl, sName, sInitialValue) ::= "<sTypeDecl> <sName> = <sInitialValue>;"

PrintLocalVariable_array(sTypeDecl, sName, nLengrh) ::= "<sTypeDecl> <sName>[<nLengrh>];"



PrintLocalType(sTypeDeclaration, sTypeVarName) ::= <<
<sTypeDeclaration> <sTypeVarName>;
>>


Read_Something(func) ::= /*nogen*/<<
if (!<func>) {
	*pErrCode = ERR_INSUFFICIENT_DATA;
	return FALSE;
}
>>
