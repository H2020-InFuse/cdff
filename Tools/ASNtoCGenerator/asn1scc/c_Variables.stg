/*
* Copyright (c) 2008-2012 Semantix and (c) 2012-2015 Neuropublic
*
* This file is part of the ASN1SCC tool.
*
* Licensed under the terms of GNU General Public Licence as published by
* the Free Software Foundation.
*
*  For more informations see License.txt file
*/

group c_Variables;

PrintIntValue(nValue) ::= "<nValue>"

PrintRealValue(dValue)    ::= "<dValue>"

PrintEnumValue(sValue)    ::= "<sValue>"

PrintRefValue1(sValue)    ::= "<sValue>"
PrintRefValue2(sModName,sValue)    ::= "<sValue>"


PrintStringValue(sValue)    ::= <<
"<sValue>"
>>

PrintCharValue(cValue)    ::= "'<cValue>'"

PrintBooleanValue(bValue)    ::= "<if(bValue)>TRUE<else>FALSE<endif>"

PrintNullValue()    ::= "NULL"

PrintBitOrOctetStringValue(bIsFixedSize, arruBytes, nCount) ::= <<
{<if(!bIsFixedSize)><nCount>,<endif>
    {
        <arruBytes:{b|0x<b;format="X2">}; separator=",\n">
    }
}
>>


PrintSequenceValueChild(sName, sInnerValue) ::= ".<sName> = <sInnerValue>"
PrintSequenceValue_child_exists(sName, sExistsBit) ::= ".<sName> = <sExistsBit>"

PrintSequenceValue(arrsChildren, arrsOptionalPresentFields) ::= <<{
    <arrsChildren:{ch|<ch>}; separator=",\n"><if(arrsOptionalPresentFields)>,
    .exist = {
        <arrsOptionalPresentFields; separator=",\n">
    }
    <endif>
}
>>

PrintChoiceValue(sAltNamePresent, sAltName, sInnerValue) ::= <<{
    .kind = <sAltNamePresent>,
    .u = { .<sAltName> = <sInnerValue>}
}
>>


PrintSequenceOfValue(bIsFixedSize, arrsInnerValues) ::= <<
{<if(!bIsFixedSize)>
    .nCount = <arrsInnerValues.Length>,
<endif>
    .arr = 
    {
        <arrsInnerValues:{ch|<ch>}; separator=",\n">        
    }
}
>>

