FROM ubuntu:16.04

## Install basic tools that are not already available in the base image
ARG DEBIAN_FRONTEND=noninteractive
ARG INSTALL_DIR=/usr/local

ENV INSTALL_CDFF=$INSTALL_DIR

RUN apt-get update && apt-get install --yes --quiet apt-utils && \
    apt-get install --yes --quiet \
      build-essential \
      cmake \
      curl \
      git \
      mono-runtime libmono-system-core4.0-cil libmono-system-numerics4.0-cil \
      unzip \
      wget

## Download, build, and install the CDFF's dependencies (and their dependencies)

SHELL ["/bin/bash", "-c"]

COPY get-cdff-dependencies.sh /tmp/CDFF/Tools/Docker/
COPY installers/ /tmp/CDFF/Tools/Docker/installers/
COPY patches/ /tmp/CDFF/Tools/Docker/patches/

RUN apt-get update && apt-get install --yes --quiet liblzma-dev libbz2-dev zlib1g-dev && \
    /tmp/CDFF/Tools/Docker/get-cdff-dependencies.sh -i ${INSTALL_CDFF} -d boost
RUN /tmp/CDFF/Tools/Docker/get-cdff-dependencies.sh -i ${INSTALL_CDFF} -d yaml-cpp
RUN /tmp/CDFF/Tools/Docker/get-cdff-dependencies.sh -i ${INSTALL_CDFF} -d eigen
RUN /tmp/CDFF/Tools/Docker/get-cdff-dependencies.sh -i ${INSTALL_CDFF} -d cloudcompare-core
RUN apt-get update && apt-get install --yes --quiet libgoogle-glog-dev libatlas-base-dev libsuitesparse-dev && \
    /tmp/CDFF/Tools/Docker/get-cdff-dependencies.sh -i ${INSTALL_CDFF} -d ceres
RUN /tmp/CDFF/Tools/Docker/get-cdff-dependencies.sh -i ${INSTALL_CDFF} -d nabo
RUN /tmp/CDFF/Tools/Docker/get-cdff-dependencies.sh -i ${INSTALL_CDFF} -d pointmatcher
RUN /tmp/CDFF/Tools/Docker/get-cdff-dependencies.sh -i ${INSTALL_CDFF} -d flann
RUN apt-get update && apt-get install --yes --quiet \
      libavcodec-dev libavformat-dev libswscale-dev \
      libjpeg-dev libpng++-dev libdc1394-22-dev libjasper-dev libtiff5-dev \
      libv4l-dev \
      libgtk2.0-dev \
      freeglut3-dev && \
    /tmp/CDFF/Tools/Docker/get-cdff-dependencies.sh -i ${INSTALL_CDFF} -d opencv
RUN /tmp/CDFF/Tools/Docker/get-cdff-dependencies.sh -i ${INSTALL_CDFF} -d vtk
RUN /tmp/CDFF/Tools/Docker/get-cdff-dependencies.sh -i ${INSTALL_CDFF} -d pcl

## Download, build, and install EnviRe and its dependencies

RUN apt-get update && apt-get install --yes --quiet pkg-config libtinyxml-dev libgoogle-glog-dev && \
    /tmp/CDFF/Tools/Docker/get-cdff-dependencies.sh -i ${INSTALL_CDFF} -d none -e

RUN apt-get update && apt-get install --yes --quiet libglew-dev && \
    /tmp/CDFF/Tools/Docker/get-cdff-dependencies.sh -i ${INSTALL_CDFF} -d pangolin

## Download and install the dependencies of CDFF-dev

RUN apt-get update && apt-get --yes --quiet install python3 python3-dev python3-pip graphviz curl
RUN pip3 install --upgrade pip
RUN pip3 install pyyaml jinja2 cython numpy msgpack-python pydot nose nose2

## Additional software useful to development

RUN apt-get update && apt-get install --yes --quiet \
      sudo dpkg-dev gdb \
      bc \
      ed sed nano vim emacs-nox emacs-goodies-el \
      info man-db manpages manpages-dev \
      mlocate \
      tar zip gzip bzip2 \
      colordiff tree fdupes \
      screen byobu tmux \
      x11-apps x11-common \
      ubuntu-settings
      # ubuntu-minimal ubuntu-standard

## Automatically build and install CDFF-dev at container creation time
## if the user mounts the sources of CDFF and CDFF-dev inside the container

COPY entrypoint.sh cdff-dev.sh /tmp/CDFF/Tools/Docker/
COPY sudoers.txt /etc/sudoers.d/cdff-dev

RUN chmod 0755 /tmp/CDFF/Tools/Docker/entrypoint.sh && \
    chmod 0755 /tmp/CDFF/Tools/Docker/cdff-dev.sh && \
    chmod 0440 /etc/sudoers.d/cdff-dev

ENTRYPOINT ["/tmp/CDFF/Tools/Docker/entrypoint.sh"]
CMD ["bash"]

## Image information

LABEL version="1.0.2"
LABEL maintainer="Romain Michalec <romain.michalec@strath.ac.uk>"
LABEL description="A self-contained environment for building and testing CDFF-core and CDFF-support, and for using CDFF-dev"
