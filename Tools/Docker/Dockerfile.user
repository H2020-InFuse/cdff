FROM ubuntu:16.04

## Install basic tools that are not already available in the base image

ARG DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get install --yes --quiet apt-utils && \
    apt-get install --yes --quiet \
      build-essential \
      cmake \
      curl \
      git \
      mono-runtime libmono-system-core4.0-cil libmono-system-numerics4.0-cil \
      unzip \
      wget

## Download, build, and install the CDFF's dependencies (and their dependencies)

SHELL ["/bin/bash", "-c"]

COPY installers/infuse_set_pkg_config_path.sh /tmp/CDFF/Tools/Docker/installers/
COPY fetch_compile_install_dependencies.sh /tmp/CDFF/Tools/Docker/

RUN apt-get update && apt-get install --yes --quiet liblzma-dev libbz2-dev zlib1g-dev
COPY installers/boost.sh /tmp/CDFF/Tools/Docker/installers/
RUN /tmp/CDFF/Tools/Docker/fetch_compile_install_dependencies.sh -i /usr/local -s boost

COPY installers/eigen.sh /tmp/CDFF/Tools/Docker/installers/
RUN /tmp/CDFF/Tools/Docker/fetch_compile_install_dependencies.sh -i /usr/local -s eigen

RUN apt-get update && apt-get install --yes --quiet libgoogle-glog-dev libatlas-base-dev libsuitesparse-dev
COPY installers/ceres.sh /tmp/CDFF/Tools/Docker/installers/
RUN /tmp/CDFF/Tools/Docker/fetch_compile_install_dependencies.sh -i /usr/local -s ceres

COPY installers/flann.sh /tmp/CDFF/Tools/Docker/installers/
RUN /tmp/CDFF/Tools/Docker/fetch_compile_install_dependencies.sh -i /usr/local -s flann

COPY installers/qhull.sh /tmp/CDFF/Tools/Docker/installers/
RUN /tmp/CDFF/Tools/Docker/fetch_compile_install_dependencies.sh -i /usr/local -s qhull

COPY installers/yamlcpp.sh /tmp/CDFF/Tools/Docker/installers/
RUN /tmp/CDFF/Tools/Docker/fetch_compile_install_dependencies.sh -i /usr/local -s yaml-cpp

RUN apt-get update && apt-get install --yes --quiet \
      libavcodec-dev libavformat-dev libswscale-dev \
      libjpeg-dev libpng++-dev libdc1394-22-dev libjasper-dev libtiff5-dev \
      libv4l-dev \
      libgtk2.0-dev \
      freeglut3-dev
COPY installers/opencv.sh /tmp/CDFF/Tools/Docker/installers/
RUN /tmp/CDFF/Tools/Docker/fetch_compile_install_dependencies.sh -i /usr/local -s opencv

COPY installers/vtk.sh /tmp/CDFF/Tools/Docker/installers/
RUN /tmp/CDFF/Tools/Docker/fetch_compile_install_dependencies.sh -i /usr/local -s vtk

COPY installers/pcl.sh /tmp/CDFF/Tools/Docker/installers/
RUN /tmp/CDFF/Tools/Docker/fetch_compile_install_dependencies.sh -i /usr/local -s pcl

## For EnviRe

COPY installers/console_bridge.sh /tmp/CDFF/Tools/Docker/installers/
RUN /tmp/CDFF/Tools/Docker/fetch_compile_install_dependencies.sh -i /usr/local -s console_bridge
COPY installers/poco.sh /tmp/CDFF/Tools/Docker/installers/
RUN /tmp/CDFF/Tools/Docker/fetch_compile_install_dependencies.sh -i /usr/local -s poco
COPY installers/poco_vendor.sh /tmp/CDFF/Tools/Docker/installers/
RUN /tmp/CDFF/Tools/Docker/fetch_compile_install_dependencies.sh -i /usr/local -s poco_vendor
COPY installers/class_loader.sh /tmp/CDFF/Tools/Docker/installers/
RUN /tmp/CDFF/Tools/Docker/fetch_compile_install_dependencies.sh -i /usr/local -s class_loader
COPY installers/base_cmake.sh /tmp/CDFF/Tools/Docker/installers/
RUN /tmp/CDFF/Tools/Docker/fetch_compile_install_dependencies.sh -i /usr/local -s base_cmake
COPY installers/tools_plugin_manager.sh /tmp/CDFF/Tools/Docker/installers/
RUN /tmp/CDFF/Tools/Docker/fetch_compile_install_dependencies.sh -i /usr/local -s tools_plugin_manager
COPY installers/base_logging.sh /tmp/CDFF/Tools/Docker/installers/
RUN /tmp/CDFF/Tools/Docker/fetch_compile_install_dependencies.sh -i /usr/local -s base_logging
COPY installers/sisl.sh /tmp/CDFF/Tools/Docker/installers/
RUN /tmp/CDFF/Tools/Docker/fetch_compile_install_dependencies.sh -i /usr/local -s sisl
COPY installers/base_types.sh /tmp/CDFF/Tools/Docker/installers/
RUN /tmp/CDFF/Tools/Docker/fetch_compile_install_dependencies.sh -i /usr/local -s base_types
COPY installers/base_numeric.sh /tmp/CDFF/Tools/Docker/installers/
RUN /tmp/CDFF/Tools/Docker/fetch_compile_install_dependencies.sh -i /usr/local -s base_numeric
COPY installers/base_boost_serialization.sh /tmp/CDFF/Tools/Docker/installers/
RUN /tmp/CDFF/Tools/Docker/fetch_compile_install_dependencies.sh -i /usr/local -s base_boost_serialization
COPY installers/envire_envire_core.sh /tmp/CDFF/Tools/Docker/installers/
RUN /tmp/CDFF/Tools/Docker/fetch_compile_install_dependencies.sh -i /usr/local -s envire_envire_core

## Download and install the dependencies of CDFF-dev

RUN apt-get update && apt-get --yes --quiet install python3 python3-dev python3-pip graphviz curl
RUN pip3 install --upgrade pip
RUN pip3 install pyyaml jinja2 cython numpy msgpack-python pydot nose nose2

## Additional software useful to development

RUN apt-get update && apt-get install --yes --quiet \
      sudo dpkg-dev gdb \
      bc \
      ed sed nano vim emacs-nox emacs-goodies-el \
      info man-db manpages manpages-dev \
      mlocate \
      tar zip gzip bzip2 \
      colordiff tree fdupes \
      screen byobu tmux \
      x11-apps x11-common \
      ubuntu-settings
      # ubuntu-minimal ubuntu-standard

## Automatically build and install CDFF-dev at container creation time
## if the user mounts the sources of CDFF and CDFF-dev inside the container

COPY entrypoint.sh cdff-dev.sh /tmp/CDFF/Tools/Docker/
COPY sudoers.txt /etc/sudoers.d/cdff-dev

RUN chmod 0755 /tmp/CDFF/Tools/Docker/entrypoint.sh && \
    chmod 0755 /tmp/CDFF/Tools/Docker/cdff-dev.sh && \
    chmod 0440 /etc/sudoers.d/cdff-dev

ENTRYPOINT ["/tmp/CDFF/Tools/Docker/entrypoint.sh"]
CMD ["bash"]

## Image information

LABEL version="0.3"
LABEL maintainer="Romain Michalec <romain.michalec@strath.ac.uk>"
LABEL description="A self-contained environment for building and testing CDFF-core and CDFF-support, and for using CDFF-dev"
